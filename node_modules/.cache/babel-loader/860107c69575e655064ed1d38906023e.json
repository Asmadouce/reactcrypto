{"ast":null,"code":"var _jsxFileName = \"/var/www/work/cryptomonnaie/src/App.js\";\nimport React, { Component } from 'react';\nimport List from './components/List';\nimport { messaging } from \"./init-fcm\";\n\nclass App extends Component {\n  async componentDidMount() {\n    messaging.requestPermission().then(async function () {\n      const token = await messaging.getToken();\n    }).catch(function (err) {\n      console.log(\"Unable to get permission to notify.\", err);\n    });\n    navigator.serviceWorker.addEventListener(\"message\", message => console.log(message));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/work/cryptomonnaie/src/App.js"],"names":["React","Component","List","messaging","App","componentDidMount","requestPermission","then","token","getToken","catch","err","console","log","navigator","serviceWorker","addEventListener","message","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAIA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACxB,QAAMI,iBAAN,GAA0B;AACtBF,IAAAA,SAAS,CAACG,iBAAV,GACKC,IADL,CACU,kBAAiB;AACnB,YAAMC,KAAK,GAAG,MAAML,SAAS,CAACM,QAAV,EAApB;AACH,KAHL,EAIKC,KAJL,CAIW,UAASC,GAAT,EAAc;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDF,GAAnD;AACH,KANL;AAQAG,IAAAA,SAAS,CAACC,aAAV,CAAwBC,gBAAxB,CAAyC,SAAzC,EAAqDC,OAAD,IAAaL,OAAO,CAACC,GAAR,CAAYI,OAAZ,CAAjE;AACH;;AACDC,EAAAA,MAAM,GAAI;AAEN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAnBuB;;AAsB5B,eAAed,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport List from './components/List';\nimport { messaging } from \"./init-fcm\";\n\n\n\nclass App extends Component {\n    async componentDidMount() {\n        messaging.requestPermission()\n            .then(async function() {\n                const token = await messaging.getToken();\n            })\n            .catch(function(err) {\n                console.log(\"Unable to get permission to notify.\", err);\n            });\n\n        navigator.serviceWorker.addEventListener(\"message\", (message) => console.log(message));\n    }\n    render () {\n\n        return (\n            <div>\n                <List/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}