{"ast":null,"code":"var _jsxFileName = \"/var/www/work/cryptomonnaie/src/components/List.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport './values.css';\nimport { messaging } from \"../init-fcm\";\nexport default class List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      coin: \"bitcoin\"\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.setState({\n      coin: e.target.value\n    });\n  }\n\n  async componentDidMount() {\n    axios.get(\"https://api.coincap.io/v2/assets/\").then(res => {\n      const items = res.data.data;\n      this.setState({\n        items\n      });\n    });\n    messaging.requestPermission().then(async function () {\n      const token = await messaging.getToken();\n      console.log(token);\n    }).catch(function (err) {\n      console.log(\"Unable to get permission to notify.\", err);\n    });\n    navigator.serviceWorker.addEventListener(\"message\", message => console.log(message));\n  }\n\n  render() {\n    const filteredCoin = this.state.items.filter(coin => coin.id === this.state.coin);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.items.map(coin => React.createElement(\"option\", {\n      key: coin.id,\n      value: coin.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, coin.name)), \";\"), filteredCoin.map(coins => React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, coins.name)), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card text-center m-3 col-sm-12  bg-secondary\",\n      style: {\n        width: '18rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      key: coins.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, coins.symbol), React.createElement(\"div\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, coins.priceUsd, \" $\"), React.createElement(\"p\", {\n      className: Math.sign(coins.changePercent24Hr) === -1 ? 'text-danger' : 'text-success',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Tendance : \", parseFloat(coins.changePercent24Hr), \"%\")))))));\n  }\n\n}","map":{"version":3,"sources":["/var/www/work/cryptomonnaie/src/components/List.js"],"names":["React","axios","messaging","List","Component","constructor","props","state","items","coin","handleClick","bind","e","setState","target","value","componentDidMount","get","then","res","data","requestPermission","token","getToken","console","log","catch","err","navigator","serviceWorker","addEventListener","message","render","filteredCoin","filter","id","map","name","coins","width","symbol","priceUsd","Math","sign","changePercent24Hr","parseFloat"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport axios from \"axios\";\nimport './values.css';\nimport { messaging } from \"../init-fcm\";\n\nexport default class List extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items : [],\n            coin :  \"bitcoin\"\n        };\n        // This binding is necessary to make `this` work in the callback\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        this.setState({coin: e.target.value});\n    }\n\n    async componentDidMount() {\n        axios.get(`https://api.coincap.io/v2/assets/`)\n            .then(res=> {\n                const items = res.data.data;\n                this.setState({items})\n            });\n        messaging.requestPermission()\n            .then(async function() {\n                const token = await messaging.getToken();\n                console.log(token);\n            })\n            .catch(function(err) {\n                console.log(\"Unable to get permission to notify.\", err);\n            });\n\n        navigator.serviceWorker.addEventListener(\"message\", (message) => console.log(message));\n    }\n\n\n    render () {\n        const filteredCoin = this.state.items.filter(coin => coin.id === this.state.coin);\n\n        return (\n            <div>\n\n                <select onClick={this.handleClick}>\n                    {this.state.items.map(coin=>(\n                        <option\n                            key={coin.id}\n                            value={coin.id}\n                        >\n                            {coin.name}\n                        </option>\n                    ))};\n                </select>\n\n\n                {filteredCoin.map((coins)=>(\n                    <div className=\"container\">\n                        <center><h1 className=\"text-light\">{coins.name}</h1></center>\n                        <div className=\"row\">\n                            <div className=\"card text-center m-3 col-sm-12  bg-secondary\" style={{ width: '18rem' }}>\n                                <div className=\"card-body\" key={coins.id}>\n                                    <h5 className=\"card-title\">{coins.symbol}</h5>\n                                    <div className=\"card-title\">{coins.priceUsd} $</div>\n                                    <p className={Math.sign(coins.changePercent24Hr) === -1 ? 'text-danger' : 'text-success'}>\n                                        Tendance : {parseFloat(coins.changePercent24Hr)}%\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n\n            </div>\n\n\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}